//Miguel Dickson
//PI DAY, 2014
//Finds the largest palindromic number in a specified range of multiplicands
//(Euler Problem asks for the largest palindromic number generated by two three-digit numbers, so the presumptive search range is 900-999 for both multiplicands, but code can be modified
//to search other ranges

public class EulerProblem4 {

	public static void main(String[] args) {
		long result =0;
		result = check_Range(900, 900, 1000);
		System.out.println(result);	
	}

	//Check the results from (int x to int z) to (int y to z) for palindromic status, and keep the largest such
	public static long check_Range(int x, int y, int z)
	{
		long result =0;
		long temp = 0;
		for (int i=x; i<z; i++)
			for (int k=y; k<z; k++)
			{
				temp = i*k;
				if (check_Palindromic(temp) && result < (i*k))
				result = i*k;			
			}
		return result;
	}
	
	
	//Check whether a given number is Palindromic by converting it to a string, and then appropriate character comparison (0 to end, 1 to end-1, etc.)
	public static boolean check_Palindromic(Long number)
	{
		
		String temp = number.toString();
		for (int i=0; i<= (temp.length()/2); i++)
		{	
			if (temp.charAt(i) != (temp.charAt(((temp.length())-1)-i)) )
				return false;
		}	
		return true;	
	}
	
	
	
}
